---
name: default

# TODO: create test builds on PR

on:
  push:
    tags:
      - '*'

jobs:
  container-image:
    environment: container-image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Git metadata
        id: tags
        uses: olegtarasov/get-tag@v2.1
        with:
          tagRegex: '(?<package>.+)@(?<version>.+)'

      - name: QEMU
        uses: docker/setup-qemu-action@v1

      - name: Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          install: true

      # Need platformless otherwise load doesn't work: https://github.com/docker/buildx/issues/59
      - name: Build Docker Image
        uses: docker/build-push-action@v5
        with:
          build-args: version=${{ steps.tags.outputs.version }}
          context: ./${{ steps.tags.outputs.package }}
          tags: ${{ secrets.REGISTRY_NAMESPACE }}/${{ steps.tags.outputs.package }}:${{ steps.tags.outputs.version }},${{ secrets.REGISTRY_NAMESPACE }}/${{ steps.tags.outputs.package }}:${{ github.sha }}
          load: true

      ## Disable until: https://github.com/anchore/scan-action/pull/129
      #- name: Scan Docker Image
      #  uses: anchore/scan-action@v3
      #  id: scan
      #  continue-on-error: true
      #  with:
      #    # Setting path allows per image .grype.yaml
      #    path: ${{ steps.tags.outputs.package }}
      #    image: ${{ secrets.REGISTRY_NAMESPACE }}/${{ steps.tags.outputs.package }}:${{ github.sha }}
      #    acs-report-enable: true

      #- name: Upload SARIF report
      #  if: ${{ steps.scan.outcome == 'failure' }}
      #  uses: github/codeql-action/upload-sarif@v1
      #  with:
      #    sarif_file: ${{ steps.scan.outputs.sarif }}

      #- name: Scanning failure
      #  if: ${{ steps.scan.outcome == 'failure' }}
      #  run: exit 1

      ## Disable until: https://github.com/yuichielectric/dive-action/pull/204
      #      - name: Analyze Docker Image
      #        uses: yuichielectric/dive-action@0.0.4
      #        with:
      #          image: ${{ secrets.REGISTRY_NAMESPACE }}/${{ steps.tags.outputs.package }}:${{ github.sha }}
      #          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker Login
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          build-args: version=${{ steps.tags.outputs.version }}
          context: ./${{ steps.tags.outputs.package }}
          tags: ${{ secrets.REGISTRY_NAMESPACE }}/${{ steps.tags.outputs.package }}:${{ steps.tags.outputs.version }},${{ secrets.REGISTRY_NAMESPACE }}/${{ steps.tags.outputs.package }}:${{ github.sha }},${{ secrets.REGISTRY_NAMESPACE }}/${{ steps.tags.outputs.package }}:latest
          platforms: linux/amd64,linux/arm64
          push: true
